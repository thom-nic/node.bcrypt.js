# Usage:
#
#   docker build -t bcryptjs-linux-arm-builder -f Dockerfile-arm .
#   docker create --name donut bcryptjs-linux-arm-builder
#   # Then copy the artifact to your host:
#   docker cp donut:/usr/local/opt/bcrypt-js/prebuilds .

FROM arm32v7/node:14-bullseye

ENV project bcrypt-js
ENV DEBIAN_FRONTEND noninteractive
ENV LC_ALL en_US.UTF-8
ENV LANG ${LC_ALL}

RUN echo "#log: ${project}: Setup system" \
  && set -x \
  && apt-get update -y \
  && apt-get install -y \
    build-essential \
    python3 \
  && apt-get clean \
  && update-alternatives --install /usr/local/bin/python python /usr/bin/python3 20 \
  && npm i -g prebuildify node-gyp \
  && sync

ADD . /usr/local/opt/${project}
WORKDIR /usr/local/opt/${project}

RUN echo "#log: ${project}: Running build" \
  && set -x \
  && npm i \
  && npm run build

ARG RUN_TESTS=true

RUN if "${RUN_TESTS}"; then \
    echo "#log ${project}: Running tests" \
    && npm test; \
  else \
    echo "#log ${project}: Tests were skipped!"; \
  fi

CMD /bin/bash -l
